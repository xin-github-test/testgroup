#include<stdio.h>
#define null 0
#define N 50
#define MAX 10000
typedef struct
{
	int vexs[N];
	int arcs[N][N];
	int vexnum,arcnum;
	int network;
	int digraph;
} MGRAPH;

void creat(MGRAPH *g)
{ int i,j,k,weight,n;
printf("请输入图的顶点数和边数:\n");
scanf("%d,%d",&g->vexnum,&g->arcnum);
n=g->vexnum;

for(i=0;i<g->vexnum;i++)
  g->vexs[i]=i;
printf("选择网1还是图0？请输入1或0\n");
scanf("%d",&g->network);
printf("选择有向图或网1还是无向图或网0，请输入0或1\n");
 scanf("%d",&g->digraph);
 for(i=0;i<n;i++)
	 for(j=0;j<n;j++)
		 if (!g->network)  g->arcs[i][j]=0;
		 else              g->arcs[i][j]=MAX;

 for(k=0;k<g->arcnum;k++)
 { if(!g->network)
 {   printf("请输入一条边或弧的两端的序号\n");
        scanf("%d,%d",&i,&j);
		g->arcs[i][j]=1;
		if(!g->digraph)    g->arcs[j][i]=1;}
 else
 {printf("请输入一条边或弧的两端点的序号及其上的权值\n");
 scanf("%d,%d,%d",&i,&j,&weight);
 g->arcs[i][j]=weight;
 if(!g->digraph)  g->arcs[j][i]=weight;
 }
 }
}
int main()
{ MGRAPH *g;
  creat(g);





	return 0;}